<nav>
  <ul class="pagination">
    <li class="page-item disabled">
      <a class="page-link" href="#" tabindex="-1">
        <i class="far fa-chevron-left"></i>
      </a>
    </li>
    
    
    <li class="page-item"><a class="page-link" href="#">1</a></li>
    <li class="page-item active">
      <a class="page-link" href="#">2 <span class="sr-only">(current)</span></a>
    </li>
    <li class="page-item"><a class="page-link" href="#">3</a></li>
    
    
    <li class="page-item">
      <a class="page-link" href="#">
        <i class="far fa-chevron-right"></i>
      </a>
    </li>
  </ul>
</nav>
@code {

  [Parameter]
  public int TotalPages { get; set; } = 10;

  [Parameter]
  public int Padding { get; set; } = 2;

  [Parameter]
  public int PaddingInside { get; set; } = 2;

  [Parameter]
  public int CurrentPage { get; set; } = 1;

  protected override async Task OnInitializedAsync()
  {
    CalculatePagination();
  }

  private void CalculatePagination()
  {
    var pagination = new List<String>();

    for (int i = 1; i <= Padding; i++)
    {
      pagination.Add(i.ToString());
    }

    if (CurrentPage > Padding+1)
    {
      pagination.Add("...");
    }

    for (int i = CurrentPage; i < (CurrentPage + PaddingInside + Padding); i++)
    {
      if (!(CurrentPage < Padding))
      {
        pagination.Add(i.ToString());
      }
    }
    
    var endPagination = new List<String>();
    
    for (int i = TotalPages; i > (TotalPages - Padding); i--)
    {
      endPagination.Add(i.ToString());
    }

    if (CurrentPage < (TotalPages - Padding - 1))
    {
      endPagination.Add("...");
    }
    
    endPagination.Reverse();
    pagination.AddRange(endPagination);

    var test = "yeet";
  }
}